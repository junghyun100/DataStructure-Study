여러 개의 정렬된 자료의 집합을 결합해 하나의 집합으로 만드는 정렬 방법이다.
이 과정을 위해 정렬된 자료 리스트를 분할, 정렬(정복), 결합과정을 반복해야한다.

과정
분할(Divide) : 자료들을 같은 크기의 2개의 부분 배열로 분할한다.
정복(Conquer) : 부분 배열을 정렬한다.
부분 배열의 크기가 충분히 작지 않으면 순환 호출을 시켜 다시 분할 시킨다.
결합(Combine) : 정렬된 부분집합들을 하나로 결합한다.

2-way병합 과 n-way병합
2개의 정렬된 집합을 하나의 집합으로 만드는 병합 방법을 2-way 병합이라고 하고,
n개의 정렬된 집합을 결합하여 하나의 집합으로 만드는 방법을 n-way 병합이라고 한다.
 
장점
입력 데이터가 무엇이든 간에 정렬되는 시간은 동일하다. (O(nlog₂n)로 동일)
만약 레코드를 연결 리스트(Linked List)로 구성하면, 링크 인덱스만 변경되므로 데이터의 이동은 무시할 수 있을 정도로 작아진다.
제자리 정렬(in-place sorting)로 구현할 수 있다.
따라서 크기가 큰 레코드를 정렬할 경우에 연결 리스트를 사용한다면, 합병 정렬은 퀵 정렬을 포함한 다른 어떤 졍렬 방법보다 효율적이다.
 
단점
만약 레코드를 배열(Array)로 구성하면, 임시 배열이 필요하다.
제자리 정렬(in-place sorting)이 아니다.
레크드들의 크기가 큰 경우에는 이동 횟수가 많으므로 매우 큰 시간적 낭비를 초래한다.
 